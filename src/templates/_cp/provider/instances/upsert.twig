{% extends "_layouts/cp" %}
{% import "_includes/forms" as forms %}

{% block actionButton %}
    <div class="btngroup submit right">
        <input type="submit" class="btn submit" value="{{ 'Save'|t('app') }}">
        <div class="btn submit menubtn"></div>
        <div class="menu">
            <ul role="listbox">
                <li>
                    <a class="formsubmit"
                       data-redirect="{{ continueEditingUrl|hash }}">
                        {{ forms.optionShortcutLabel('S') }}
                        {{ "Save and continue editing"|t('app') }}
                    </a>
                </li>
            </ul>
            {% if instance.id %}
                <hr/>
                <ul role="listbox">
                    <li>
                        <a class="formsubmit error"
                           data-action="{{ baseActionPath }}/delete"
                           data-confirm="{{ 'Are you sure you want to delete this provider instance?'|t('patron') }}"
                           data-redirect="{{ baseCpPath|hash }}"
                           role="option"
                           tabindex="-1">{{ "Delete"|t('app') }}</a>
                    </li>
                </ul>
            {% endif %}
        </div>
    </div>
{% endblock %}

{% block content %}
    <input type="hidden" name="action"
           value="{{ baseActionPath }}/{% if instance.id %}update{% else %}create{% endif %}">
    <input type="hidden" name="provider" value="{{ provider.id }}">
    {% if instance.id %}<input type="hidden" name="instance" value="{{ instance.id }}">{% endif %}
    {{ redirectInput(baseCpProviderPath) }}

    {% embed "patron/ember/circle-icon" with {
        icon: (provider['icon'] is defined and provider['icon'] ? provider['icon'] : null),
        label: provider.displayName,
        status: provider.enabled ? 'active' : 'pending',
        class: ['large']
    } %}
        {% block circleIconTextContent %}
            <h3 class="title">
                <a href="{{ url(baseCpPath) }}">{{ provider.displayName }}</a>
            </h3>
            <h5 class="sub-title">{{ provider.handle }}</h5>
        {% endblock %}
    {% endembed %}

    <hr/>

    {{ forms.textField({
        label: "Client Id"|t('patron'),
        instructions: "The client/consumer Id assigned to you from the provider."|t('patron'),
        id: 'clientId',
        name: 'clientId',
        value: instance.clientId,
        errors: instance.getErrors('clientId'),
        required: true
    }) }}

    {{ forms.textField({
        label: "Client Secret"|t('patron'),
        instructions: "The client/consumer secret assigned to you from the provider."|t('patron'),
        id: 'clientSecret',
        name: 'clientSecret',
        type: 'password',
        value: instance.clientSecret,
        errors: instance.getErrors('clientSecret')
    }) }}

    <div id="settings">
        {% namespace 'settings' %}
            {{ instance.providerSettings.inputHtml()|raw }}
        {% endnamespace %}
    </div>

{% endblock %}

{% block details %}
    {% if instance.id %}
        <div class="meta read-only">
            <div class="data">
                <h5 class="heading">{{ "Created at"|t('app') }}</h5>
                <div class="value">{{ instance.dateCreated|datetime('short') }}</div>
            </div>
            <div class="data">
                <h5 class="heading">{{ "Updated at"|t('app') }}</h5>
                <div class="value">{{ instance.dateUpdated|datetime('short') }}</div>
            </div>
        </div>

        <hr>

    {% endif %}

    <div id="environments" class="meta">
        <h4 class="heading">{{ "Environments"|t('patron') }}</h4>
        {% set environments = instance.id ? [] : [craft.patron.settings.environment] %}
        {% for env in instance.environments %}
            {% set environments = environments|merge([env.environment]) %}
        {% endfor %}
        {% namespace 'environments' %}
            {% for environment in environmentOptions %}
                {{ forms.lightswitchField({
                    label: environment.label,
                    id: environment.value,
                    name: environment.value,
                    value: environment.value,
                    small: true,
                    on: environment.value in environments,
                    disabled: environment.disabled
                }) }}
            {% endfor %}
        {% endnamespace %}
    </div>

    {% hook 'patron.instances.edit.sidebar' %}

{% endblock %}